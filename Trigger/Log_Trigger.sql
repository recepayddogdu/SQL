-- UPDATE TRIGGER
CREATE TRIGGER TRG_ITEMS_UPDATE
ON ITEMS
AFTER UPDATE
AS
BEGIN

INSERT INTO ITEMS_LOG
	([ID], [ITEMCODE], [ITEMNAME], [UNITPRICE], [CATEGORY1], [CATEGORY2], 
	[CATEGORY3], [CATEGORY4], [BRAND], [LOG_ACTIONTYPE], [LOG_DATE], 
	[LOG_USERNAME], [LOG_PROGRAMNAME], [LOG_HOSTNAME])

SELECT  [ID], [ITEMCODE], [ITEMNAME], [UNITPRICE], [CATEGORY1], [CATEGORY2], 
		[CATEGORY3], [CATEGORY4], [BRAND], 'UPDATE', GETDATE(), SUSER_NAME(),
		PROGRAM_NAME(), HOST_NAME()
FROM DELETED
END

----------------------------------------------
--UPDATE TRIGGER TEST
SELECT * FROM ITEMS_LOG
UPDATE ITEMS SET UNITPRICE=80 WHERE ID=3
--------------------------------------------------
--DELETE TRIGGER
CREATE TRIGGER TRG_ITEMS_DELETE
ON ITEMS
AFTER DELETE
AS
BEGIN

INSERT INTO ITEMS_LOG
	([ID], [ITEMCODE], [ITEMNAME], [UNITPRICE], [CATEGORY1], [CATEGORY2], 
	[CATEGORY3], [CATEGORY4], [BRAND], [LOG_ACTIONTYPE], [LOG_DATE], 
	[LOG_USERNAME], [LOG_PROGRAMNAME], [LOG_HOSTNAME])

SELECT  [ID], [ITEMCODE], [ITEMNAME], [UNITPRICE], [CATEGORY1], [CATEGORY2], 
		[CATEGORY3], [CATEGORY4], [BRAND], 'DELETE', GETDATE(), SUSER_NAME(),
		PROGRAM_NAME(), HOST_NAME()
FROM DELETED
END
-----------------
-- DELETE TRIGGER TEST
DELETE FROM ITEMS WHERE ID=3
SELECT * FROM ITEMS_LOG

--------------------------------------------------------------------------------
--Tek Trigger ile iki islem
CREATE TRIGGER TRG_ITEMS_DELETE_UPDATE
ON ITEMS
AFTER DELETE, UPDATE
AS
BEGIN
--Eger ben update yapiyorsam inserted ve deleted tablolarim dolu
--Eger ben delete yapiyorsam inserted bos, deleted tablom dolu
DECLARE @DELETEDCOUNT AS INT
DECLARE @INSERTEDCOUNT AS INT

SELECT @DELETEDCOUNT=COUNT(*) FROM DELETED
SELECT @INSERTEDCOUNT=COUNT(*) FROM INSERTED

DECLARE @LOG_ACTIONTYPE AS VARCHAR(20)

IF @DELETEDCOUNT>0 AND @INSERTEDCOUNT>0
	SET @LOG_ACTIONTYPE='UPDATE'

IF @DELETEDCOUNT>0 AND @INSERTEDCOUNT=0
	SET @LOG_ACTIONTYPE='DELETE'

INSERT INTO ITEMS_LOG
	([ID], [ITEMCODE], [ITEMNAME], [UNITPRICE], [CATEGORY1], [CATEGORY2], 
	[CATEGORY3], [CATEGORY4], [BRAND], [LOG_ACTIONTYPE], [LOG_DATE], 
	[LOG_USERNAME], [LOG_PROGRAMNAME], [LOG_HOSTNAME])

SELECT  [ID], [ITEMCODE], [ITEMNAME], [UNITPRICE], [CATEGORY1], [CATEGORY2], 
		[CATEGORY3], [CATEGORY4], [BRAND], @LOG_ACTIONTYPE, GETDATE(), SUSER_NAME(),
		PROGRAM_NAME(), HOST_NAME()
FROM DELETED
END

-------------------------------------
-- TRG_ITEMS_DELETE_UPDATE TEST
UPDATE ITEMS SET ITEMNAME='isim degistirildi' WHERE ID=6
DELETE FROM ITEMS WHERE ID=7
SELECT * FROM ITEMS_LOG

----------------------------------------
-- INSTEAD OF TRIGGER
CREATE TRIGGER TRG_ITEMS_DELETE_UPDATE_INSTEADOF
ON ITEMS
INSTEAD OF DELETE, UPDATE
AS
BEGIN
--Eger ben update yapiyorsam inserted ve deleted tablolarim dolu
--Eger ben delete yapiyorsam inserted bos, deleted tablom dolu
DECLARE @DELETEDCOUNT AS INT
DECLARE @INSERTEDCOUNT AS INT

SELECT @DELETEDCOUNT=COUNT(*) FROM DELETED
SELECT @INSERTEDCOUNT=COUNT(*) FROM INSERTED

DECLARE @LOG_ACTIONTYPE AS VARCHAR(20)

IF @DELETEDCOUNT>0 AND @INSERTEDCOUNT>0
	SET @LOG_ACTIONTYPE='UPDATE'

IF @DELETEDCOUNT>0 AND @INSERTEDCOUNT=0
	SET @LOG_ACTIONTYPE='DELETE'

INSERT INTO ITEMS_LOG
	([ID], [ITEMCODE], [ITEMNAME], [UNITPRICE], [CATEGORY1], [CATEGORY2], 
	[CATEGORY3], [CATEGORY4], [BRAND], [LOG_ACTIONTYPE], [LOG_DATE], 
	[LOG_USERNAME], [LOG_PROGRAMNAME], [LOG_HOSTNAME])

SELECT  [ID], [ITEMCODE], [ITEMNAME], [UNITPRICE], [CATEGORY1], [CATEGORY2], 
		[CATEGORY3], [CATEGORY4], [BRAND], @LOG_ACTIONTYPE, GETDATE(), SUSER_NAME(),
		PROGRAM_NAME(), HOST_NAME()
FROM DELETED
END
-------------------------------------
-- INSTEAD OF TRIGGER TEST
DELETE FROM ITEMS WHERE ID=10
SELECT*FROM ITEMS_LOG
SELECT*FROM ITEMS 